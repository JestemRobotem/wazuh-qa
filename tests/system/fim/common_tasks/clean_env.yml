---
  - hosts: all
    vars_files:
      - ../../provisioning/vars/elastic_nginx.yml
      - ../../provisioning/vars/wazuh_agent.yml
    strategy: free
    tasks:
    # Wazuh Agents cleanup
      - block:
        - name: Check if wazuh-agent service exists
          stat: path=/etc/init.d/wazuh-agent
          register: agent_service_status

        - name: Stop wazuh-agent service
          service:
            name: wazuh-agent
            state: stopped
          when: agent_service_status.stat.exists

        - name: Uninstall wazuh-agent service
          package:
            name: wazuh-agent
            state: absent

        - name: Ensure /var/ossec is deleted
          file:
            path: /var/ossec
            state: absent
        when:
          - inventory_hostname in groups['linuxagents']
        become: yes

      - block:
        - name: Windows | Check if Program Files (x86) exists
          win_stat:
            path: C:\Program Files (x86)
          register: check_path

        - name: Windows | Set Win Path (x86)
          set_fact:
            wazuh_agent_win_path: "{{ windows_install_dir_x86 }}"
          when:
           - check_path.stat.exists

        - name: Windows | Set Win Path (x64)
          set_fact:
            wazuh_agent_win_path: "{{ windows_install_dir }}"
          when:
            - not check_path.stat.exists

        - name: Windows | Check if Wazuh installer is already downloaded
          win_stat:
            path: "C:\\wazuh-agent-{{ windows_agent_version }}-{{ windows_agent_revision }}.msi"
          register: wazuh_package_downloaded

        - name: Windows | Download Wazuh Agent package
          win_get_url:
            url: "{{ windows_repo }}wazuh-agent-{{ windows_agent_version }}-{{ windows_agent_revision }}.msi"
            dest: C:\
          when:
            - not wazuh_package_downloaded.stat.exists

        - name: Uninstall Wazuh Agent
          win_package:
            path: "C:\\wazuh-agent-{{ windows_agent_version }}-{{ windows_agent_revision }}.msi"
            state: absent

        - name: Delete Wazuh installation folder
          win_file:
            path: "{{ wazuh_agent_win_path }}"
            state: absent

        when:
          - inventory_hostname in groups['windowsagents']


    # Wazuh Managers cleanup

      - block:

        - name: Stop wazuh stack services (wazuh-manager, wazuh-api, and, filebeat)
          service:
            name: "{{ item }}"
            state: stopped
          with_items:
            - wazuh-manager
            - wazuh-api
            - filebeat

        - name: Uninstall wazuh-manager service
          package:
            name: "{{ item }}"
            state: absent
          with_items:
            - wazuh-manager

        - name: Ensure /var/ossec is deleted
          file:
            path: /var/ossec
            state: absent

        when:
          - inventory_hostname in groups['masters'] or inventory_hostname in groups['workers']
        become: yes
      
    # Elasticsearch cleanup

      - block:

        - name: List and delete elasticsearch indexes + stop elasticsearch service
          block:
            - name: List Elasticsearch indexes
              uri:
                url: "{{ elastic_api_protocol }}://{{ inventory_hostname }}:{{ elasticsearch_port }}/_cat/indices/*?v&s=index&pretty"
                url_username: "{{ elastic_user }}"
                url_password: "{{ elastic_password }}"
                method: GET
                validate_certs: no
              register: elasticsearch_indexes_get
              delegate_to: "{{ inventory_hostname }}"

            - name: Print elasticsearch indexes
              debug:
                msg: "{{ item.std }}"
              with_items: elasticsearch_indexes_get.stdout_lines

            - name: Delete Elasticsearch indexes (HTTP)
              uri:
                url: "{{ elastic_api_protocol }}://{{ inventory_hostname }}:{{ elasticsearch_port }}/*"
                url_username: "{{ elastic_user }}"
                url_password: "{{ elastic_password }}"
                method: DELETE
                validate_certs: no
              register: elasticsearch_indexes_get
              delegate_to: "{{ inventory_hostname }}"

            - name: Print elasticsearch indexes after deletion
              debug: var={{ item }}
              with_items: elasticsearch_indexes_delete.stdout_lines

            - name: Stop elasticsearch service
              service:
                name: "{{ item }}"
                state: stopped
              with_items:
                - elasticsearch

        when:
          - inventory_hostname in groups['elasticsearch']
        become: yes          

    # Kibana cleanup

      - block:
        - name: Check if kibana service exists
          stat: path=/etc/init.d/kibana
          register: kibana_service_status

        - name: Stop kibana service
          service:
            name: kibana
            state: stopped
          when: kibana_service_status.stat.exists

        when:
          - inventory_hostname in groups['kibana']
        become: yes          

