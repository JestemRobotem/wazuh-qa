- block:
  - name: Creates directories to store agents' outputs in Managers hosts
    file:
      path: "{{ item }}"
      state: directory
    with_items:
      - "{{ agents_results_manager_path }}"
      - "{{ agents_results_manager_path }}/added"
      - "{{ agents_results_manager_path }}/modified"
      - "{{ agents_results_manager_path }}/deleted"
      - "{{ agents_results_manager_path }}/added/missing"
      - "{{ agents_results_manager_path }}/modified/missing"
      - "{{ agents_results_manager_path }}/deleted/missing"



  when:
    - inventory_hostname in groups['masters']
  become: yes

- block:
  - name: Create {{ agents_linux_output_path }} to store outputs in Agents hosts | Linux
    file:
      path: "{{ agents_linux_output_path }}"
      state: directory
    when:
      - inventory_hostname in groups['linuxagents']

  - name: Create {{ files_fim_testing_linux }} to store test files in Agents hosts | Linux
    file:
      path: "{{ files_fim_testing_linux }}"
      state: directory
    when:
      - inventory_hostname in groups['linuxagents']

  - name: Copy {{ files_config_source_path }} to the Agents hosts | Linux
    template:
        src: "../../common_tasks/files_configuration.json.j2"
        dest: "{{ files_config_linux_destination_path }}"
    vars:
      agents_fim_testing_path: "{{ files_fim_testing_linux }}"

  - name: Stop wazuh-agent service | Linux
    service:
      name: wazuh-agent
      state: stopped

  - name: Clean logs wazuh-agent
    become: True
    shell: "echo '' > {{ linux_ossec_folder_path }}/logs/ossec.log"
    when: clean_logs is defined and clean_logs

  - name: Remove old <syscheck> configuration
    replace:
      path: "{{ linux_ossec_folder_path }}/etc/ossec.conf"
      regexp: '((\S*)(\t*)<syscheck>)[\S\s*]*?<\/syscheck>'
      replace: ""

  - name: Insert <syscheck> configuration | rpm
    blockinfile:
      path: "{{ linux_ossec_folder_path }}/etc/ossec.conf"
      block: "{{ lookup('file', './config/{{ files_config_agent_linux_ossec_conf_rpm }}') }}"
      marker: "<!-- Custom Syscheck configuration (Managed by Ansible) -->"
      state: present
    when:
      - ansible_os_family == "RedHat"

  - name: Insert <syscheck> configuration | deb
    blockinfile:
      path: "{{ linux_ossec_folder_path }}/etc/ossec.conf"
      block: "{{ lookup('file', './config/{{ files_config_agent_linux_ossec_conf_deb }}') }}"
      marker: "<!-- Custom Syscheck configuration (Managed by Ansible) -->"
      state: present
    when:
      - ansible_os_family == "Debian"

  - name: Start wazuh-agent service | Linux
    service:
      name: wazuh-agent
      state: started

  when:
    - inventory_hostname in groups['linuxagents']
  become: yes

- block:
  - name: Create {{ agents_windows_output_path }} to store outputs in agents hosts | Windows
    win_file:
      path: "{{ agents_windows_output_path }}"
      state: directory

  - name: Create {{ files_fim_testing_windows }} to store test files in agents hosts | Windows
    win_file:
      path: "{{ files_fim_testing_windows }}"
      state: directory

  - name: Copy {{ files_config_source_path }} to the Agents hosts | Windows
    template:
        src: "../../common_tasks/files_configuration.json.j2"
        dest: "{{ files_config_windows_destination_path }}"
    vars:
      agents_fim_testing_path: "{{ files_fim_testing_windows }}"

  - name: Stop wazuh-agent service | Windows
    win_service:
      name: OssecSvc
      start_mode: auto
      state: stopped

  - name: "Clean win logs"
    win_command: powershell.exe -
    args:
      stdin: "Clear-Content 'C:\\Program Files (x86)\\ossec-agent\\ossec.log'"
    when: clean_logs is defined and clean_logs

  - name: Copy {{ files_config_agent_windows_ossec_conf }} to the agents hosts | Windows
    win_copy:
        src: "config/{{ files_config_agent_windows_ossec_conf }}"
        dest: "{{ windows_ossec_folder_path }}/ossec.conf"

  - name: Start wazuh-agent service | Windows
    win_service:
      name: OssecSvc
      start_mode: auto
      state: started


  when:
    - inventory_hostname in groups['windowsagents']
