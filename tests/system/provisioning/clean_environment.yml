---
  - hosts:
      - 'all:!elasticsearch'
    vars_files:
      - ./vars/elastic_nginx.yml
      - ./vars/wazuh_agent.yml
      - ../fim/vars/main.yml
    strategy: free
    tasks:
    # Wazuh Agents cleanup
      - block:
        - name: Uninstall wazuh-agent
          package:
            name: wazuh-agent
            state: absent

        - name: Delete /var/ossec
          file:
            path: /var/ossec
            state: absent
        when:
          - inventory_hostname in groups['linuxagents']
        become: yes

      - block:
        - name: Windows | Check if Program Files (x86) exists
          win_stat:
            path: C:\Program Files (x86)
          register: check_path

        - name: Windows | Set Win Path (x86)
          set_fact:
            wazuh_agent_win_path: "{{ windows_install_dir_x86 }}"
          when:
           - check_path.stat.exists

        - name: Windows | Set Win Path (x64)
          set_fact:
            wazuh_agent_win_path: "{{ windows_install_dir }}"
          when:
            - not check_path.stat.exists

        - name: Windows | Check if Wazuh installer is already downloaded
          win_stat:
            path: "C:\\{{ wazuh_winagent_package_name }}"
          register: wazuh_package_downloaded

        - name: Windows | Download Wazuh Agent package
          win_get_url:
            url: "{{ wazuh_winagent_config_url }}"
            dest: "C:\\{{ wazuh_winagent_package_name }}"
          when:
            - not wazuh_package_downloaded.stat.exists

        - name: Uninstall Wazuh Agent
          win_package:
            path: "C:\\{{ wazuh_winagent_package_name }}"
            state: absent

        - name: Delete Wazuh Agent
          win_file:
            path: "C:\\{{ wazuh_winagent_package_name }}"
            state: absent

        - name: Delete Wazuh installation folder
          win_file:
            path: "{{ wazuh_agent_win_path }}"
            state: absent

        when:
          - inventory_hostname in groups['windowsagents']


    # Wazuh Managers cleanup

      - block:

        - name: Uninstall wazuh-manager service
          package:
            name:
              - wazuh-manager
              - wazuh-api
              - filebeat
            state: absent

        - name: Ensure /var/ossec is deleted
          file:
            path: /var/ossec
            state: absent

        when:
          - inventory_hostname in groups['masters'] or inventory_hostname in groups['workers']
        become: yes

    # Elasticsearch cleanup
  - hosts:
      - 'elasticsearch'
    vars_files:
      - ./vars/elastic_nginx.yml
      # - ./vars/wazuh_agent.yml
      # - ../fim/vars/main.yml
    strategy: free
    tasks:
      - block:
        - name: Stop Kibana
          service:
            name: kibana
            state: stopped

        - name: List Elasticsearch indexes
          uri:
            url: "{{ elastic_api_protocol }}://{{ inventory_hostname }}:{{ elasticsearch_port }}/_cat/indices/*?v&s=index&pretty"
            url_username: "{{ elastic_user }}"
            url_password: "{{ elastic_password }}"
            method: GET
            validate_certs: no
            return_content: yes
          register: elasticsearch_indexes_get
          delegate_to: "{{ inventory_hostname }}"

        - name: Print elasticsearch indexes
          debug:
            var: elasticsearch_indexes_get.content

        - name: Delete Elasticsearch indexes (HTTP)
          uri:
            url: "{{ elastic_api_protocol }}://{{ inventory_hostname }}:{{ elasticsearch_port }}/*"
            url_username: "{{ elastic_user }}"
            url_password: "{{ elastic_password }}"
            method: DELETE
            validate_certs: no
            status_code: 200
          delegate_to: "{{ inventory_hostname }}"

        - name: List Elasticsearch indexes after deletion
          uri:
            url: "{{ elastic_api_protocol }}://{{ inventory_hostname }}:{{ elasticsearch_port }}/_cat/indices/*?v&s=index&pretty"
            url_username: "{{ elastic_user }}"
            url_password: "{{ elastic_password }}"
            method: GET
            validate_certs: no
            return_content: yes
          register: elasticsearch_indexes_delete
          delegate_to: "{{ inventory_hostname }}"

        - name: Print elasticsearch indexes after deletion
          debug:
            var: elasticsearch_indexes_delete.content

        - name: Stop Elasticsearch
          service:
            name: elasticsearch
            state: stopped

        when:
          - inventory_hostname in groups['elasticsearch']
        become: yes
