---
  - name: Launching environments
    hosts: localhost
    serial: 25
    vars_files:
      - ./vars/credentials.yml
    tasks:
      - name: Obtaining date and time for logs files creation
        set_fact:
          current_date_time: "{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}_{{ansible_date_time.minute }}"

      - name: Creating folder to store logs if not already present
        file:
          path: "./deployment_logs/log_{{ current_date_time }}"
          state: directory
        register: path_created

      - name: Creating logs files
        file:
          path: "./deployment_logs/log_{{ current_date_time }}/{{ item }}"
          state: touch
        with_items:
          - deploy.log
          - elasticsearch_bootstrap.log
          - elasticsearch.log
          - masters.log
          - workers.log
          - kibana.log
          - linux_agents.log
          - windows_agents.log
          - post_installation.log
          - use_cases_install.log
          - use_cases_actions.log
          - use_cases_tests.log

      - name: Generating local hosts and configuration files
        shell: "ansible-playbook {{ item }}"
        with_items:
          # - "deploy_aws_stack.yml >> ./deployment_logs/log_{{ current_date_time }}/deploy.log"
          # - "generate_hosts_file.yml -i {{ hosts_classified_destination }} >> ./deployment_logs/log_{{ current_date_time }}/deploy.log"
          - "setup_provisioning.yml -i {{ ansible_hosts_destination }} >> ./deployment_logs/log_{{ current_date_time }}/deploy.log"
          - "setup_instances.yml -i {{ ansible_hosts_destination }} >> ./deployment_logs/log_{{ current_date_time }}/deploy.log"
          # The elasticsearch[0] is the node which will generate certificates, it's a must to provision him first
          - "provision_playbook.yml -i {{ ansible_hosts_destination }} -l elasticsearch[0] >> ./deployment_logs/log_{{ current_date_time }}/elasticsearch_bootstrap.log"
        environment:
          ANSIBLE_HASH_BEHAVIOUR: merge
 
      - name: Launching  installation tasks
        shell: "ansible-playbook provision_playbook.yml -i {{ ansible_hosts_destination }} {{ item }}"
        register: installation_tasks
        with_items:
          # - -l elasticsearch[1:] >> ./deployment_logs/log_{{ current_date_time }}/elasticsearch.log
          - -l masters >> ./deployment_logs/log_{{ current_date_time }}/masters.log
          # - -l workers >> ./deployment_logs/log_{{ current_date_time }}/workers.log
          - -l kibana >> ./deployment_logs/log_{{ current_date_time }}/kibana.log
        environment:
          ANSIBLE_HASH_BEHAVIOUR: merge          

      - name: Installing and registering agents
        shell: "ansible-playbook -i {{ ansible_hosts_destination }} {{ item }}"
        async: 10000
        poll: 0
        with_items:
          - provision_playbook.yml -l linuxagents >> ./deployment_logs/log_{{ current_date_time }}/linux_agents.log
          - provision_playbook.yml -l windowsagents >> ./deployment_logs/log_{{ current_date_time }}/windows_agents.log
        register: register_agents
        environment:
          ANSIBLE_HASH_BEHAVIOUR: merge

      - async_status:
          jid: "{{ item.ansible_job_id }}"
        loop: "{{ register_agents.results }}"
        register: jobs_agents
        until: jobs_agents.finished
        retries: 1000
        delay: 10

      - name: Launching post installation tasks
        shell: "ansible-playbook -i {{ ansible_hosts_destination }} {{ item }}"
        register: post_installation
        with_items:
          - post_installation.yml >> ./deployment_logs/log_{{ current_date_time }}/post_installation.log
        environment:
          ANSIBLE_HASH_BEHAVIOUR: merge