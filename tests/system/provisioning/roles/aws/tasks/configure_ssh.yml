---
  - name: Create group for SSH user
    group:
      name: "{{ ssh_username }}"
      state: present

  - name: Create user from specified SSH user
    user:
      name: "{{ ssh_username }}"
      group: "{{ ssh_username }}"
      password: "{{ ssh_password | password_hash('sha512') }}" # "user" module requires password hashing

  - name: Ensure new user permissions on it's home folder
    file:
      path: "/home/{{ ssh_username }}"
      owner: "{{ ssh_username }}"
      group: "{{ ssh_username }}"
      state: directory

  - name: Verify SSH user ID and default shell
    lineinfile:
      path: /etc/passwd
      regexp: \S*{{ ssh_username }}\S*
      line: "{{ ssh_username }}:x:1001:1001::/home/{{ ssh_username }}:/bin/bash"

  - name: Add SSH user to sudoers group
    lineinfile:
      path: /etc/sudoers
      regexp: "{{ ssh_username }}.*"
      line: "{{ ssh_username }} ALL=(ALL)NOPASSWD:ALL"

  - name: Insert pytest key in the authorized_keys file
    authorized_key:
      user: "{{ ssh_username }}"
      key: "{{ lookup('file', '{{ ssh_key_path_public }}') }}"
      state: present

  - name: Insert custom SSH key in authorized_keys_file
    authorized_key:
      user: "{{ ssh_username }}"
      key: "{{ custom_ssh_key }}"
      state: present
  
  - name: Enable Password Authentication on SSH configuration
    lineinfile:
      path: "/etc/ssh/sshd_config"
      regexp: "PasswordAuthentication no"
      line: "PasswordAuthentication yes"
    notify: "restart sshd service"