---
  - name: AWS Deploy | Verify that required parameters are properly set
    block:
      - name: Checking that parameters file exists
        stat:
          path: "{{ parameters_file_path }}"
        register: parameters_file
        failed_when: not parameters_file.stat.exists

      - name: Checking that template file exists
        stat:
          path: "{{ cloudformation_template_path }}{{ cloudformation_template_name }}"
        register: template_file
        failed_when: not template_file.stat.exists

      - name: Checking that variable "stack_name" is defined
        fail:
          msg: "The variable 'stack_name' is not defined"
        when: stack_name | length == 0

      - name: Checking that variable "bucket_name" is defined
        fail:
          msg: "The variable 'bucket_name' is not defined"
        when: bucket_name | length == 0

  - name: Verify there is no Stack with the same name
    command: >-
      aws
      --profile {{ aws_cli_profile }}
      cloudformation describe-stacks
      --stack-name {{ stack_name }}
    register: check_stack_exists
    changed_when: False
    no_log: True
    failed_when: check_stack_exists.rc == 0

  - name: Verify the stack_name is no longer than 17
    fail:
      msg: Error, stack_name is longer than 17 chars, this will make some resources names unvalid.
    when: stack_name | length > 17

  - name: Upload CloudFormation template to S3
    command: >-
      aws
      --profile {{ aws_cli_profile }}
      s3 cp {{ cloudformation_template_path }}{{ cloudformation_template_name }}
      s3://{{ bucket_name }}
    register: upload_s3_result
    changed_when: upload_s3_result.rc == 0

  - name: Creating AWS Stack
    command: >-
      aws
      cloudformation create-stack
      --profile {{ aws_cli_profile }}
      --stack-name {{ stack_name }}
      --template-url {{ template_url }}{{ cloudformation_template_name }}
      --parameters file://{{ parameters_file_path }}
      --capabilities CAPABILITY_IAM
      --tags Key=service_name,Value={{ service_name_tag }} Key=team,Value={{ team_tag }}
    register: create_stack_call_result
    changed_when: create_stack_call_result.rc == 0

  - name: Awaiting for the AWS stack to finish, this could take a while...
    command: >-
      aws
      --profile {{ aws_cli_profile }}
      cloudformation wait stack-create-complete
      --stack-name {{ stack_name }}
    register: aws_stack_sleeper
    async: 1200
    poll: 0
    tags:
      - skip_ansible_lint # Disabled linting due to errors with polling

  - name: AWS Stack not ready yet, awaiting...
    async_status:
      jid: "{{ aws_stack_sleeper.ansible_job_id }}"
    register: aws_stack_deploy_result
    until: aws_stack_deploy_result.finished
    retries: 40
    delay: 60